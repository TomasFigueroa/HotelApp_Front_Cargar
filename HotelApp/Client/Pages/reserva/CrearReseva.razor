@page "/crear/reserva"
@inject IHTTPServicio http
@inject NavigationManager navigationManager

<div class="p-4">
    <div class="container col-md-6">
        <div class="shadow p-4 bg-white">
            <FormReserva res="reserva" dniHuespedes="dniHuespedes" onValidSubbmit="Grabar" onCancel="Cancelar" />
            @if (mostrarMensajeError)
            {
                <div class="alert alert-danger">@mensajeError</div>
            }
        </div>
    </div>
</div>

@code {

    private List<int> dniHuespedes = new List<int>();
    private Reserva reserva = new Reserva();
    private int persdni = 0;
    private bool mostrarMensajeError = false;
    private string mensajeError = "";


    private async Task Grabar()
    {
        try
        {
            bool reservaValida = true; // Inicialmente, consideramos que la reserva es válida
            ReservaDTO reservaDTO = new()
                {
                    NroReserva = reserva.NroReserva,
                    Dni = reserva.Dni,
                    Fecha_fin = reserva.Fecha_fin,
                    Fecha_inicio = reserva.Fecha_inicio,
                    Nhabs = reserva.nhabs,
                    Dns = dniHuespedes
                };

            persdni = reserva.Dni;
            var httpPers = await http.GetCod<Persona>($"api/Persona/GetDni/{persdni}");

            // Verificar si httpPers es nulo
            if (httpPers == null)
            {
                mostrarMensajeError = true;
                mensajeError = "No se encontró la persona con el DNI especificado.";
                reservaValida = false; // Marcar la reserva como no válida
            }

            // Verificar si Respuesta de httpPers es nulo
            if (httpPers.Respuesta == null)
            {
                mostrarMensajeError = true;
                mensajeError = "El DNI que ingresaste no corresponde a una persona en el sistema.";
                reservaValida = false; // Marcar la reserva como no válida
            }

            httpPers.Respuesta.NumHab = reservaDTO.Nhabs;

            foreach (var dni in dniHuespedes)
            {
                var personaHuesped = await http.Get<Huesped>($"api/Huesped/GetDni/{dni}");
                if (personaHuesped.Respuesta == null)
                {
                    mostrarMensajeError = true;
                    mensajeError = $"El DNI {dni} de un huésped no existe en la base de datos.";
                    reservaValida = false; // Marcar la reserva como no válida
                    break; // Terminar la verificación de DNIs si uno es inválido
                }
            }

            Console.WriteLine(reservaValida);
            if (reservaValida == true)
            {
                var HTTPResponse = await http.Post<ReservaDTO>("api/Reservar", reservaDTO);

                if (HTTPResponse.Error)
                {
                    mostrarMensajeError = true;
                    mensajeError = "No se pudo realizar la reserva o se ingresó un DNI de persona inválido.";
                    return;
                }

                var respuesta = await http.Put<Persona>($"api/Persona/{httpPers.Respuesta.Id}", httpPers.Respuesta);

                if (respuesta.Error)
                {
                    mostrarMensajeError = true;
                    mensajeError = "No se pudo actualizar la información de la persona.";
                    return;
                }

                navigationManager.NavigateTo("/reserva");
            }
            else
            {
                mostrarMensajeError = true;
                mensajeError = "Se produjo un error inesperado, verifique los datos cargados y que concuerden con los cargados previamente ";
            }
            
        }
        catch (Exception ex)
        {
            mostrarMensajeError = true;
            mensajeError = "Se produjo un error inesperado: " + ex.Message;
        }
    }


    private void Cancelar()
    {
        navigationManager.NavigateTo("/");
    }

}
