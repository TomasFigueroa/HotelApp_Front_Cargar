@inject IHTTPServicio http

<PageTitle>Gestion Hotel</PageTitle>

<div class="bg-fondo vh-100 p-4 container overflow-auto">
    <div class="botonera text-center d-flex gap-5 justify-content-center mb-4">
        <a href="/crear" class="btn btn-success text-uppercase fw-bold shadow-sm">
            <i class="bi bi-plus"></i> + Habitación
        </a>
        <button type="button" class="btn btn-light text-uppercase fw-bold shadow-sm">
            <i class="bi bi-bed text-success"></i> Disponibles: <span class="text-success fw-bold">@habitacionesDisponibles</span>
        </button>
        <button type="button" class="btn btn-light text-uppercase fw-bold shadow-sm">
            <i class="bi bi-bed text-danger"></i> Ocupadas: <span class="text-danger fw-bold">@habitacionesNoDisponibles</span>
        </button>
        <button type="button" class="btn btn-light text-uppercase fw-bold shadow-sm">
            <i class="bi bi-wrench text-info"></i> Reparación: <span class="text-violet fw-bold">@habitacionesEnMantenimiento</span>
        </button>
    </div>
    <div class="container">
        <div class="row">

            @if (Error)
            {
                <p>@Mensaje</p>
            }
            else
            {
                @if (habitaciones == null)
                {
                    <div class="d-flex justify-content-center align-items-center">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                }
                else if (habitaciones.Count == 0)
                {
                    <p>no existen datos</p>
                }
                else
                {
                    @foreach (var item in habitaciones)
                    {
                        <div class="col-lg-2 col-md-4 col-sm-6 col-12 mb-4">
                            <div class="card rounded shadow">

                                <div class="card-header text-uppercase text-center fw-bold" style="background-color: @(item.Estado == "disponible" ? "#4CAF50" : (item.Estado == "ocupada" ? "#ff3333" : (item.Estado == "reparacion" ? "#9C27B0" : "#4CAF50"))); color: white;">
                                    <p class="mb-1">@item.Nhab</p>
                                    <p class="mb-0">@item.Estado</p>
                                </div>
                                <div class="card-body text-center">
                                    <p class="fw-bold mb-0">Camas: @item.Camas</p>
                                </div>
                                <div class="card-footer text-center d-flex align-items-center gap-2">
                                    <a class="btn btn-secondary text-uppercase fw-bold font-xs" href="/personas">Ver</a>
                                    <a class="btn btn-primary text-uppercase fw-bold font-xs" href="habitacion/editar/@item.Id">
                                        <i class="fas fa-edit"></i> Editar
                                    </a>
                                </div>
                            </div>
                        </div>
                    }
                }
            }
        </div>
    </div>
</div>

@code {

    [Inject]
    private NavigationManager NavigationManager { get; set; }

    List<Habitacion> habitaciones;

    string Mensaje = "";
    bool Error;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Leer();
        OnInitialized();
    }
    private async Task Leer()
    {
        var respuesta = await http.Get<List<Habitacion>>("api/Habitacion");
        Error = respuesta.Error;

        if (!respuesta.Error)
        {
            habitaciones = respuesta.Respuesta;
        }
        else
        {
            Mensaje = await respuesta.ObtenerError();
        }
    }

    int habitacionesDisponibles;
    int habitacionesNoDisponibles;
    int habitacionesEnMantenimiento;

    private void OnInitialized()
    {
        habitacionesDisponibles = 0;
        habitacionesNoDisponibles = 0;
        habitacionesEnMantenimiento = 0;

        foreach (var habitacion in habitaciones)
        {
            if (habitacion.Estado == "disponible")
            {
                habitacionesDisponibles++;
            }
            else if (habitacion.Estado == "ocupada")
            {
                habitacionesNoDisponibles++;
            }
            else if (habitacion.Estado == "reparacion")
            {
                habitacionesEnMantenimiento++;
            }
        }
    }
    // private void NavegarAOtraPagina()
    // {
    //     NavigationManager.NavigateTo("/personas"); // Ruta a la otra página
    // }
}