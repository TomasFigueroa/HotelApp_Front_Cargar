

@inject IHTTPServicio http

<PageTitle>Gestion Hotel</PageTitle>

<main class="bg-fondo vh-100 p-3 container overflow-auto ">
    <div class="card-container">
        <div class="row gap-1 justify-content-between text-center">
            <div class="botonera">
                <button type="button" class=" btn btn-success text-uppercase gris-claro fw-bold shadow-sm " @onclick="NavegarAOtraPagina1">+ Habitacion</button>
                <button type="button" class=" btn btn-light text-uppercase gris-claro fw-bold shadow-sm ">Disponibles: <span class="text-success fw-bold">@habitacionesDisponibles</span></button>
                <button type="button" class=" btn btn-light fw-bold gris-claro text-uppercase shadow-sm ">Ocupadas: <span class="text-danger fw-bold">@habitacionesNoDisponibles</span></button>
                <button type="button" class=" btn btn-light gris-claro fw-bold text-uppercase shadow-sm ">Reparacion: <span class="reparacion fw-bold">@habitacionesEnMantenimiento</span></button>

            </div>
 
        @if (Error)
        {
            <tr>@Mensaje</tr>
        }
        else
        {
            @if (habitaciones == null)
            {
                <tr>Cargando....</tr>
            }
            else if (habitaciones.Count == 0)
            {
                <tr>no existen datos</tr>
            }
            else
            {
            @foreach (var item in habitaciones)
            {
                <div class="col-lg-2 bg-white border-radius shadow p-0 ">
                    <div class="row gx-1 justify-content-between mb-4">
                        <div class="text-uppercase text-white text-center border-radius-top fw-bold pb-2" style="background-color: @ObtenerColorDeFondo(item.Estado)">
                            <p class="mb-1 ">@item.Nhab</p>
                            <p class="mb-0">@item.Estado</p>
                        </div>
                        <div class="px-2 pb-2 text-center">
                            <p class="fw-bold gris-claro m-0 py-4 "></p>
                                    <button class="btn btn-secondary p-1 text-uppercase fw-bold font-xs" @onclick="NavegarAOtraPagina">Ver habitacion</button>
                        </div>

                                <a class="btn btn-primary enlace-grande text-uppercase fw-bold font-xs text-center"
                                   href="habitacion/editar/@item.Id">
                                    <i>Editar</i>
                                </a>
                    </div>
                </div>
            }
            }
            }
           
        </div>
    </div>
</main>

@code {
  
    [Inject]
    private NavigationManager NavigationManager { get; set; }

    List<Habitacion> habitaciones;

    string Mensaje = "";
    bool Error;
   
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Leer();
        OnInitialized();
    }
    private async Task Leer()
    {
        var respuesta = await http.Get<List<Habitacion>>("api/Habitacion");
        Error = respuesta.Error;

        if (!respuesta.Error)
        {
            habitaciones = respuesta.Respuesta;
        }
        else
        {
            Mensaje = await respuesta.ObtenerError();
        }
    }

    private string ObtenerColorDeFondo(string estado)
    {
        switch (estado)
        {
            case "disponible":
                return "green"; // Cambia el color verde para el estado "activo"
            case "ocupada":
                return "red"; // Cambia el color rojo para el estado "inactivo"
            case "reparacion":
                return "violet"; // Color predeterminado para otros estados
            default:
                return "black";
        }
    }
    int habitacionesDisponibles;
    int habitacionesNoDisponibles;
    int habitacionesEnMantenimiento;

    private void OnInitialized()
    {
        habitacionesDisponibles = 0;
        habitacionesNoDisponibles = 0;
        habitacionesEnMantenimiento = 0;

        foreach (var habitacion in habitaciones)
        {
            if (habitacion.Estado== "disponible")
            {
                habitacionesDisponibles++;
            }
            else if (habitacion.Estado == "ocupada")
            {
                habitacionesNoDisponibles++;
            }
            else if (habitacion.Estado == "reparacion")
            {
                habitacionesEnMantenimiento++;
            }
        }
    }
    private void NavegarAOtraPagina()
    {
        NavigationManager.NavigateTo("/personas"); // Ruta a la otra página

    }
    private void NavegarAOtraPagina1()
    {
        NavigationManager.NavigateTo("/crear"); // Ruta a la otra página

    }
}




